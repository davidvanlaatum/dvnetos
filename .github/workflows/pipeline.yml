name: Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test
    env:
      BUILD_TYPE: Debug
      CMAKE_COLOR_DIAGNOSTICS: ON
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo --preserve-env=GITHUB_JOB .github/scripts/deps.sh
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DTEST_MODE=ON -DCMAKE_VERBOSE_MAKEFILE=ON -G Ninja
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -- -j$(nproc)
      - name: Test MemCheck
        working-directory: ${{github.workspace}}/build
        continue-on-error: true
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure --test-action memcheck --output-junit junit.xml
      - name: Test
        working-directory: ${{github.workspace}}/build
        continue-on-error: true
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure --output-junit junit.xml
      - name: Generate Coverage
        working-directory: ${{github.workspace}}/build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target coverage
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-test
          path: |
            build/Testing
            build/CMakeFiles
      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{github.workspace}}/build/coverage
      - name: Junit Test Dashboard
        if: always()
        uses: janisz/action@v2
        with:
          paths: ${{github.workspace}}/build/junit.xml
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: build/coverage.xml
          format: markdown
          output: both
      - name: Coverage Summary
        run: cat ${{github.workspace}}/coverage-results.md >> $GITHUB_STEP_SUMMARY
  build:
    name: Build
    env:
      BUILD_TYPE: Debug
      CMAKE_COLOR_DIAGNOSTICS: ON
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, x86_64]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo --preserve-env=GITHUB_JOB .github/scripts/deps.sh
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DARCH=${{matrix.arch}} -DCMAKE_VERBOSE_MAKEFILE=ON -G Ninja
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -- -j$(nproc)
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{matrix.arch}}
          path: |
            build/Testing
            build/CMakeFiles
